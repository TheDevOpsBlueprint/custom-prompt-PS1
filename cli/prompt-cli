#!/usr/bin/env bash
# Custom Prompt CLI Tool

VERSION="1.0.0"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROMPT_DIR="${HOME}/.custom-prompt"
COMMANDS_DIR="${SCRIPT_DIR}/commands"

# Source the prompt functions if installed
if [[ -f "$PROMPT_DIR/loader.sh" ]]; then
    source "$PROMPT_DIR/loader.sh" 2>/dev/null
fi

# Source command files if they exist
if [[ -f "$COMMANDS_DIR/theme.sh" ]]; then
    source "$COMMANDS_DIR/theme.sh"
fi

if [[ -f "$COMMANDS_DIR/config.sh" ]]; then
    source "$COMMANDS_DIR/config.sh"
fi

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Print functions
print_info() {
    echo -e "${GREEN}✓${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

# Show help
function show_help() {
    cat << EOF
Custom Prompt CLI v${VERSION}

Usage: prompt-cli [command] [options]

Commands:
  install           Install the custom prompt
  uninstall         Remove the custom prompt
  enable            Enable the custom prompt
  disable           Disable the custom prompt
  reload            Reload prompt configuration
  status            Show current prompt status
  config            Manage configuration
  theme             Manage themes
  version           Show version
  help              Show this help message

Examples:
  prompt-cli install
  prompt-cli theme list
  prompt-cli theme set ocean
  prompt-cli config set SHOW_TIME true
  prompt-cli config list
  prompt-cli status

For more help on a command: prompt-cli [command] help
EOF
}

# Install command
function cmd_install() {
    if [[ -f "${SCRIPT_DIR}/../install.sh" ]]; then
        bash "${SCRIPT_DIR}/../install.sh"
    else
        print_error "Install script not found"
        exit 1
    fi
}

# Uninstall command
function cmd_uninstall() {
    print_warning "This will remove Custom Prompt PS1"
    read -p "Are you sure? (y/n): " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Remove installation directory
        rm -rf "$PROMPT_DIR"

        # Remove from RC files
        for rc_file in ~/.bashrc ~/.bash_profile ~/.zshrc; do
            if [[ -f "$rc_file" ]]; then
                sed -i.bak '/# Custom Prompt PS1/,/^fi$/d' "$rc_file" 2>/dev/null || \
                sed -i '' '/# Custom Prompt PS1/,/^fi$/d' "$rc_file" 2>/dev/null
            fi
        done

        print_info "Custom Prompt uninstalled"
    else
        print_info "Uninstall cancelled"
    fi
}

# Enable command
function cmd_enable() {
    if type enable_custom_prompt &>/dev/null; then
        enable_custom_prompt
    else
        print_error "Custom prompt not installed. Run: prompt-cli install"
        exit 1
    fi
}

# Disable command
function cmd_disable() {
    if type disable_custom_prompt &>/dev/null; then
        disable_custom_prompt
    else
        print_error "Custom prompt not installed"
        exit 1
    fi
}

# Reload command
function cmd_reload() {
    if type reload_prompt &>/dev/null; then
        reload_prompt
    else
        print_error "Custom prompt not installed"
        exit 1
    fi
}

# Status command
function cmd_status() {
    if type prompt_info &>/dev/null; then
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        prompt_info
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    else
        print_error "Custom prompt not installed"
        echo "Run: prompt-cli install"
        exit 1
    fi
}

# Version command
function cmd_version() {
    cat << EOF
Custom Prompt CLI v${VERSION}

Installation Path: ${PROMPT_DIR}
Config Path: ${HOME}/.config/custom-prompt/config
CLI Path: ${SCRIPT_DIR}

EOF
}

# Main command handler
case "$1" in
    install)
        cmd_install
        ;;
    uninstall)
        cmd_uninstall
        ;;
    enable)
        cmd_enable
        ;;
    disable)
        cmd_disable
        ;;
    reload)
        cmd_reload
        ;;
    status)
        cmd_status
        ;;
    config)
        shift
        if type config_command &>/dev/null; then
            config_command "$@"
        else
            print_error "Config command not found"
            exit 1
        fi
        ;;
    theme)
        shift
        if type theme_command &>/dev/null; then
            theme_command "$@"
        else
            print_error "Theme command not found"
            exit 1
        fi
        ;;
    version|--version|-v)
        cmd_version
        ;;
    help|--help|-h|"")
        show_help
        ;;
    *)
        print_error "Unknown command: $1"
        echo "Run: prompt-cli help"
        exit 1
        ;;
esac